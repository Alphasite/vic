package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetContainerEndpointsHandlerFunc turns a function with the right signature into a get container endpoints handler
type GetContainerEndpointsHandlerFunc func(GetContainerEndpointsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetContainerEndpointsHandlerFunc) Handle(params GetContainerEndpointsParams) middleware.Responder {
	return fn(params)
}

// GetContainerEndpointsHandler interface for that can handle valid get container endpoints params
type GetContainerEndpointsHandler interface {
	Handle(GetContainerEndpointsParams) middleware.Responder
}

// NewGetContainerEndpoints creates a new http.Handler for the get container endpoints operation
func NewGetContainerEndpoints(ctx *middleware.Context, handler GetContainerEndpointsHandler) *GetContainerEndpoints {
	return &GetContainerEndpoints{Context: ctx, Handler: handler}
}

/*GetContainerEndpoints swagger:route GET /scopes/containers/{handleOrId} scopes getContainerEndpoints

Get a list of the endpoints for a container

*/
type GetContainerEndpoints struct {
	Context *middleware.Context
	Handler GetContainerEndpointsHandler
}

func (o *GetContainerEndpoints) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetContainerEndpointsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
