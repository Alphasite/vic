package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListAllHandlerFunc turns a function with the right signature into a list all handler
type ListAllHandlerFunc func(ListAllParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListAllHandlerFunc) Handle(params ListAllParams) middleware.Responder {
	return fn(params)
}

// ListAllHandler interface for that can handle valid list all params
type ListAllHandler interface {
	Handle(ListAllParams) middleware.Responder
}

// NewListAll creates a new http.Handler for the list all operation
func NewListAll(ctx *middleware.Context, handler ListAllHandler) *ListAll {
	return &ListAll{Context: ctx, Handler: handler}
}

/*ListAll swagger:route GET /scopes scopes listAll

ListAll list all API

*/
type ListAll struct {
	Context *middleware.Context
	Handler ListAllHandler
}

func (o *ListAll) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListAllParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
