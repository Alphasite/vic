package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetContainerEndpointsParams creates a new GetContainerEndpointsParams object
// with the default values initialized.
func NewGetContainerEndpointsParams() GetContainerEndpointsParams {
	var ()
	return GetContainerEndpointsParams{}
}

// GetContainerEndpointsParams contains all the bound params for the get container endpoints operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetContainerEndpoints
type GetContainerEndpointsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request

	/*
	  Required: true
	  In: path
	*/
	HandleOrID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *GetContainerEndpointsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	o.HTTPRequest = r

	rHandleOrID, rhkHandleOrID, _ := route.Params.GetOK("handleOrId")
	if err := o.bindHandleOrID(rHandleOrID, rhkHandleOrID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContainerEndpointsParams) bindHandleOrID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.HandleOrID = raw

	return nil
}
