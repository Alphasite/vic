package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*ListAllOK OK

swagger:response listAllOK
*/
type ListAllOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ScopeConfig `json:"body,omitempty"`
}

// NewListAllOK creates ListAllOK with default headers values
func NewListAllOK() *ListAllOK {
	return &ListAllOK{}
}

// WithPayload adds the payload to the list all o k response
func (o *ListAllOK) WithPayload(payload []*models.ScopeConfig) *ListAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all o k response
func (o *ListAllOK) SetPayload(payload []*models.ScopeConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.ScopeConfig, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ListAllDefault error

swagger:response listAllDefault
*/
type ListAllDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListAllDefault creates ListAllDefault with default headers values
func NewListAllDefault(code int) *ListAllDefault {
	if code <= 0 {
		code = 500
	}

	return &ListAllDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list all default response
func (o *ListAllDefault) WithStatusCode(code int) *ListAllDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list all default response
func (o *ListAllDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list all default response
func (o *ListAllDefault) WithPayload(payload *models.Error) *ListAllDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all default response
func (o *ListAllDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
