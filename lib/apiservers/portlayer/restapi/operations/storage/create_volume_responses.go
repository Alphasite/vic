package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*CreateVolumeCreated Created

swagger:response createVolumeCreated
*/
type CreateVolumeCreated struct {

	/*
	  In: Body
	*/
	Payload *models.VolumeResponse `json:"body,omitempty"`
}

// NewCreateVolumeCreated creates CreateVolumeCreated with default headers values
func NewCreateVolumeCreated() *CreateVolumeCreated {
	return &CreateVolumeCreated{}
}

// WithPayload adds the payload to the create volume created response
func (o *CreateVolumeCreated) WithPayload(payload *models.VolumeResponse) *CreateVolumeCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create volume created response
func (o *CreateVolumeCreated) SetPayload(payload *models.VolumeResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVolumeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateVolumeNotFound VolumeStore Does not Exist

swagger:response createVolumeNotFound
*/
type CreateVolumeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVolumeNotFound creates CreateVolumeNotFound with default headers values
func NewCreateVolumeNotFound() *CreateVolumeNotFound {
	return &CreateVolumeNotFound{}
}

// WithPayload adds the payload to the create volume not found response
func (o *CreateVolumeNotFound) WithPayload(payload *models.Error) *CreateVolumeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create volume not found response
func (o *CreateVolumeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVolumeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateVolumeConflict Volume already exists by that ID

swagger:response createVolumeConflict
*/
type CreateVolumeConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVolumeConflict creates CreateVolumeConflict with default headers values
func NewCreateVolumeConflict() *CreateVolumeConflict {
	return &CreateVolumeConflict{}
}

// WithPayload adds the payload to the create volume conflict response
func (o *CreateVolumeConflict) WithPayload(payload *models.Error) *CreateVolumeConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create volume conflict response
func (o *CreateVolumeConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVolumeConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateVolumeInternalServerError Error

swagger:response createVolumeInternalServerError
*/
type CreateVolumeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVolumeInternalServerError creates CreateVolumeInternalServerError with default headers values
func NewCreateVolumeInternalServerError() *CreateVolumeInternalServerError {
	return &CreateVolumeInternalServerError{}
}

// WithPayload adds the payload to the create volume internal server error response
func (o *CreateVolumeInternalServerError) WithPayload(payload *models.Error) *CreateVolumeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create volume internal server error response
func (o *CreateVolumeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVolumeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateVolumeDefault error

swagger:response createVolumeDefault
*/
type CreateVolumeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVolumeDefault creates CreateVolumeDefault with default headers values
func NewCreateVolumeDefault(code int) *CreateVolumeDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateVolumeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create volume default response
func (o *CreateVolumeDefault) WithStatusCode(code int) *CreateVolumeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create volume default response
func (o *CreateVolumeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create volume default response
func (o *CreateVolumeDefault) WithPayload(payload *models.Error) *CreateVolumeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create volume default response
func (o *CreateVolumeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVolumeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
