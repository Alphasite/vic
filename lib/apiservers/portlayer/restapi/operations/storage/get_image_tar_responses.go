package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*GetImageTarOK OK

swagger:response getImageTarOK
*/
type GetImageTarOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetImageTarOK creates GetImageTarOK with default headers values
func NewGetImageTarOK() *GetImageTarOK {
	return &GetImageTarOK{}
}

// WithPayload adds the payload to the get image tar o k response
func (o *GetImageTarOK) WithPayload(payload io.ReadCloser) *GetImageTarOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get image tar o k response
func (o *GetImageTarOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImageTarOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetImageTarNotFound Not found

swagger:response getImageTarNotFound
*/
type GetImageTarNotFound struct {
}

// NewGetImageTarNotFound creates GetImageTarNotFound with default headers values
func NewGetImageTarNotFound() *GetImageTarNotFound {
	return &GetImageTarNotFound{}
}

// WriteResponse to the client
func (o *GetImageTarNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

/*GetImageTarDefault error

swagger:response getImageTarDefault
*/
type GetImageTarDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetImageTarDefault creates GetImageTarDefault with default headers values
func NewGetImageTarDefault(code int) *GetImageTarDefault {
	if code <= 0 {
		code = 500
	}

	return &GetImageTarDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get image tar default response
func (o *GetImageTarDefault) WithStatusCode(code int) *GetImageTarDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get image tar default response
func (o *GetImageTarDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get image tar default response
func (o *GetImageTarDefault) WithPayload(payload *models.Error) *GetImageTarDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get image tar default response
func (o *GetImageTarDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImageTarDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
