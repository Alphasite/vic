package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*DeleteImageOK OK

swagger:response deleteImageOK
*/
type DeleteImageOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Image `json:"body,omitempty"`
}

// NewDeleteImageOK creates DeleteImageOK with default headers values
func NewDeleteImageOK() *DeleteImageOK {
	return &DeleteImageOK{}
}

// WithPayload adds the payload to the delete image o k response
func (o *DeleteImageOK) WithPayload(payload []*models.Image) *DeleteImageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image o k response
func (o *DeleteImageOK) SetPayload(payload []*models.Image) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Image, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DeleteImageNotFound Not found

swagger:response deleteImageNotFound
*/
type DeleteImageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageNotFound creates DeleteImageNotFound with default headers values
func NewDeleteImageNotFound() *DeleteImageNotFound {
	return &DeleteImageNotFound{}
}

// WithPayload adds the payload to the delete image not found response
func (o *DeleteImageNotFound) WithPayload(payload *models.Error) *DeleteImageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image not found response
func (o *DeleteImageNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteImageLocked In use

swagger:response deleteImageLocked
*/
type DeleteImageLocked struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageLocked creates DeleteImageLocked with default headers values
func NewDeleteImageLocked() *DeleteImageLocked {
	return &DeleteImageLocked{}
}

// WithPayload adds the payload to the delete image locked response
func (o *DeleteImageLocked) WithPayload(payload *models.Error) *DeleteImageLocked {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image locked response
func (o *DeleteImageLocked) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageLocked) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(423)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteImageDefault error

swagger:response deleteImageDefault
*/
type DeleteImageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageDefault creates DeleteImageDefault with default headers values
func NewDeleteImageDefault(code int) *DeleteImageDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteImageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete image default response
func (o *DeleteImageDefault) WithStatusCode(code int) *DeleteImageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete image default response
func (o *DeleteImageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete image default response
func (o *DeleteImageDefault) WithPayload(payload *models.Error) *DeleteImageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image default response
func (o *DeleteImageDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
