package misc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetVCHInfoHandlerFunc turns a function with the right signature into a get v c h info handler
type GetVCHInfoHandlerFunc func(GetVCHInfoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetVCHInfoHandlerFunc) Handle(params GetVCHInfoParams) middleware.Responder {
	return fn(params)
}

// GetVCHInfoHandler interface for that can handle valid get v c h info params
type GetVCHInfoHandler interface {
	Handle(GetVCHInfoParams) middleware.Responder
}

// NewGetVCHInfo creates a new http.Handler for the get v c h info operation
func NewGetVCHInfo(ctx *middleware.Context, handler GetVCHInfoHandler) *GetVCHInfo {
	return &GetVCHInfo{Context: ctx, Handler: handler}
}

/*GetVCHInfo swagger:route GET /vch/info misc getVCHInfo

Gets vital information about the vch

*/
type GetVCHInfo struct {
	Context *middleware.Context
	Handler GetVCHInfoHandler
}

func (o *GetVCHInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetVCHInfoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
