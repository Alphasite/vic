package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*InspectOK OK

swagger:response inspectOK
*/
type InspectOK struct {

	/*
	  In: Body
	*/
	Payload *models.TaskInspectResponse `json:"body,omitempty"`
}

// NewInspectOK creates InspectOK with default headers values
func NewInspectOK() *InspectOK {
	return &InspectOK{}
}

// WithPayload adds the payload to the inspect o k response
func (o *InspectOK) WithPayload(payload *models.TaskInspectResponse) *InspectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the inspect o k response
func (o *InspectOK) SetPayload(payload *models.TaskInspectResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InspectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*InspectNotFound not found

swagger:response inspectNotFound
*/
type InspectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInspectNotFound creates InspectNotFound with default headers values
func NewInspectNotFound() *InspectNotFound {
	return &InspectNotFound{}
}

// WithPayload adds the payload to the inspect not found response
func (o *InspectNotFound) WithPayload(payload *models.Error) *InspectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the inspect not found response
func (o *InspectNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InspectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*InspectInternalServerError Inspect of task failed

swagger:response inspectInternalServerError
*/
type InspectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInspectInternalServerError creates InspectInternalServerError with default headers values
func NewInspectInternalServerError() *InspectInternalServerError {
	return &InspectInternalServerError{}
}

// WithPayload adds the payload to the inspect internal server error response
func (o *InspectInternalServerError) WithPayload(payload *models.Error) *InspectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the inspect internal server error response
func (o *InspectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InspectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
