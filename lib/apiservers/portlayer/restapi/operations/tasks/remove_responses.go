package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*RemoveOK OK

swagger:response removeOK
*/
type RemoveOK struct {

	/*
	  In: Body
	*/
	Payload *models.TaskRemoveResponse `json:"body,omitempty"`
}

// NewRemoveOK creates RemoveOK with default headers values
func NewRemoveOK() *RemoveOK {
	return &RemoveOK{}
}

// WithPayload adds the payload to the remove o k response
func (o *RemoveOK) WithPayload(payload *models.TaskRemoveResponse) *RemoveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove o k response
func (o *RemoveOK) SetPayload(payload *models.TaskRemoveResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RemoveNotFound not found

swagger:response removeNotFound
*/
type RemoveNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveNotFound creates RemoveNotFound with default headers values
func NewRemoveNotFound() *RemoveNotFound {
	return &RemoveNotFound{}
}

// WithPayload adds the payload to the remove not found response
func (o *RemoveNotFound) WithPayload(payload *models.Error) *RemoveNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove not found response
func (o *RemoveNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RemoveInternalServerError Removal of task failed

swagger:response removeInternalServerError
*/
type RemoveInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveInternalServerError creates RemoveInternalServerError with default headers values
func NewRemoveInternalServerError() *RemoveInternalServerError {
	return &RemoveInternalServerError{}
}

// WithPayload adds the payload to the remove internal server error response
func (o *RemoveInternalServerError) WithPayload(payload *models.Error) *RemoveInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove internal server error response
func (o *RemoveInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
