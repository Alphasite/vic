package interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*InteractionJoinOK OK

swagger:response interactionJoinOK
*/
type InteractionJoinOK struct {

	/*
	  In: Body
	*/
	Payload *models.InteractionJoinResponse `json:"body,omitempty"`
}

// NewInteractionJoinOK creates InteractionJoinOK with default headers values
func NewInteractionJoinOK() *InteractionJoinOK {
	return &InteractionJoinOK{}
}

// WithPayload adds the payload to the interaction join o k response
func (o *InteractionJoinOK) WithPayload(payload *models.InteractionJoinResponse) *InteractionJoinOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the interaction join o k response
func (o *InteractionJoinOK) SetPayload(payload *models.InteractionJoinResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InteractionJoinOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*InteractionJoinNotFound VirtualDevice not found

swagger:response interactionJoinNotFound
*/
type InteractionJoinNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInteractionJoinNotFound creates InteractionJoinNotFound with default headers values
func NewInteractionJoinNotFound() *InteractionJoinNotFound {
	return &InteractionJoinNotFound{}
}

// WithPayload adds the payload to the interaction join not found response
func (o *InteractionJoinNotFound) WithPayload(payload *models.Error) *InteractionJoinNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the interaction join not found response
func (o *InteractionJoinNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InteractionJoinNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*InteractionJoinInternalServerError Adding a VirtualDevice failed

swagger:response interactionJoinInternalServerError
*/
type InteractionJoinInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInteractionJoinInternalServerError creates InteractionJoinInternalServerError with default headers values
func NewInteractionJoinInternalServerError() *InteractionJoinInternalServerError {
	return &InteractionJoinInternalServerError{}
}

// WithPayload adds the payload to the interaction join internal server error response
func (o *InteractionJoinInternalServerError) WithPayload(payload *models.Error) *InteractionJoinInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the interaction join internal server error response
func (o *InteractionJoinInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InteractionJoinInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
