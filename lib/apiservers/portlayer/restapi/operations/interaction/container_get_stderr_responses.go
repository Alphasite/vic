package interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*ContainerGetStderrOK OK

swagger:response containerGetStderrOK
*/
type ContainerGetStderrOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewContainerGetStderrOK creates ContainerGetStderrOK with default headers values
func NewContainerGetStderrOK() *ContainerGetStderrOK {
	return &ContainerGetStderrOK{}
}

// WithPayload adds the payload to the container get stderr o k response
func (o *ContainerGetStderrOK) WithPayload(payload io.ReadCloser) *ContainerGetStderrOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container get stderr o k response
func (o *ContainerGetStderrOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerGetStderrOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ContainerGetStderrNotFound Container not found

swagger:response containerGetStderrNotFound
*/
type ContainerGetStderrNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewContainerGetStderrNotFound creates ContainerGetStderrNotFound with default headers values
func NewContainerGetStderrNotFound() *ContainerGetStderrNotFound {
	return &ContainerGetStderrNotFound{}
}

// WithPayload adds the payload to the container get stderr not found response
func (o *ContainerGetStderrNotFound) WithPayload(payload *models.Error) *ContainerGetStderrNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container get stderr not found response
func (o *ContainerGetStderrNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerGetStderrNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ContainerGetStderrInternalServerError Failed to get stderr

swagger:response containerGetStderrInternalServerError
*/
type ContainerGetStderrInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewContainerGetStderrInternalServerError creates ContainerGetStderrInternalServerError with default headers values
func NewContainerGetStderrInternalServerError() *ContainerGetStderrInternalServerError {
	return &ContainerGetStderrInternalServerError{}
}

// WithPayload adds the payload to the container get stderr internal server error response
func (o *ContainerGetStderrInternalServerError) WithPayload(payload *models.Error) *ContainerGetStderrInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container get stderr internal server error response
func (o *ContainerGetStderrInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerGetStderrInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
