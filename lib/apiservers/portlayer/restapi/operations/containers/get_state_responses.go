package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

/*GetStateOK OK

swagger:response getStateOK
*/
type GetStateOK struct {

	/*
	  In: Body
	*/
	Payload *models.ContainerGetStateResponse `json:"body,omitempty"`
}

// NewGetStateOK creates GetStateOK with default headers values
func NewGetStateOK() *GetStateOK {
	return &GetStateOK{}
}

// WithPayload adds the payload to the get state o k response
func (o *GetStateOK) WithPayload(payload *models.ContainerGetStateResponse) *GetStateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state o k response
func (o *GetStateOK) SetPayload(payload *models.ContainerGetStateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetStateNotFound not found

swagger:response getStateNotFound
*/
type GetStateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateNotFound creates GetStateNotFound with default headers values
func NewGetStateNotFound() *GetStateNotFound {
	return &GetStateNotFound{}
}

// WithPayload adds the payload to the get state not found response
func (o *GetStateNotFound) WithPayload(payload *models.Error) *GetStateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state not found response
func (o *GetStateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetStateDefault Error

swagger:response getStateDefault
*/
type GetStateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateDefault creates GetStateDefault with default headers values
func NewGetStateDefault(code int) *GetStateDefault {
	if code <= 0 {
		code = 500
	}

	return &GetStateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get state default response
func (o *GetStateDefault) WithStatusCode(code int) *GetStateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get state default response
func (o *GetStateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get state default response
func (o *GetStateDefault) WithPayload(payload *models.Error) *GetStateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state default response
func (o *GetStateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
