package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetContainerListHandlerFunc turns a function with the right signature into a get container list handler
type GetContainerListHandlerFunc func(GetContainerListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetContainerListHandlerFunc) Handle(params GetContainerListParams) middleware.Responder {
	return fn(params)
}

// GetContainerListHandler interface for that can handle valid get container list params
type GetContainerListHandler interface {
	Handle(GetContainerListParams) middleware.Responder
}

// NewGetContainerList creates a new http.Handler for the get container list operation
func NewGetContainerList(ctx *middleware.Context, handler GetContainerListHandler) *GetContainerList {
	return &GetContainerList{Context: ctx, Handler: handler}
}

/*GetContainerList swagger:route GET /containers/list containers getContainerList

Gets a list of all containers

*/
type GetContainerList struct {
	Context *middleware.Context
	Handler GetContainerListHandler
}

func (o *GetContainerList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetContainerListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
