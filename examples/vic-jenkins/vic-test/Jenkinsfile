pipeline {
    agent { label 'slave' }

    environment {
        GOPATH = '/var/jenkins_home/gopath'
        GOROOT = '/usr/local/go'
        VIC_MACHINE_PATH = '${WORKSPACE}/bin/vic-machine-linux'
        DOCKER_FLAGS = '-H tcp://localhost:2376'
        DRONE_BUILD_NUMBER="${BUILD_NUMBER}"
        ESX_URL = "10.160.235.249"
        ESX_USERNAME = "Administrator@vsphere.local"
        ESX_PASSWORD = "Admin!23"
        ESX_THUMBPRINT = "30:D0:FB:EC:0E:8D:13:EC:58:9D:56:27:36:78:15:A3:03:01:C2:3E"
        ESX_TLS_CNAME = "*.eng.vmware.com"
        CLUSTER_NAME = "Cluster"
        VCH_NAME = "test_vch"
        IMAGE_STORE = "vsanDatastore/test-vch-imagestore"
        VOLUME_STORE = "vsanDatastore/test-vch-imagestore:default"
        BRIDGE_NETWORK = "bridge"
        PUBLIC_NETWORK = "vm-network"
        CONTAINER_NETWORK = "external"
        MANAGEMENT_NETWORK = ""
        REGISTRY_URL = "vm-harbour.nishadmathur.com"
        REGISTRY_USER = "admin"
        REGISTRY_PASSWORD = "Harbor12345"
        REGISTRY_GROUP = "jenkins"
        INSECURE_REGISTRY = "['vm-harbour.nishadmathur.com', '10.160.254.190']"
        JENKINS_ADMIN_USERNAME = "test"
        JENKINS_ADMIN_PASSWORD = "test"
        DATACENTER_NAME = "Datacenter"
        DATASTORE_NAME = "vsanDatastore"
        DEBUG = "0"
        ESX_HOST_0 = "10.160.250.6"
        ESX_HOST_1 = "10.160.228.59"
        ESX_HOST_2 = "10.160.229.236"
        ESX_HOST_3 = "10.160.228.122"
    }

    stages {
        stage('Clone') {
            steps {
                git url: 'https://github.com/Alphasite/vic'
                sh 'mkdir -p $GOPATH/src/github.com/vmware'
                sh 'mount --bind . $GOPATH/src/github.com/vmware/vic'
            }
        }

        stage('Build') {
            steps {
                parallel(
                        vicmachine: {
                            sh 'docker $DOCKER_FLAGS run -v $GOPATH:/go  -w /go/src/github.com/vmware/vic -e BUILD_NUMBER=10000 golang:1.8 make vic-machine'
                        },
                        appliance: {
                            sh 'docker $DOCKER_FLAGS run -v $GOPATH:/go  -w /go/src/github.com/vmware/vic -e BUILD_NUMBER=10000 golang:1.8 make appliance'
                        },
                        boostrap: {
                            sh 'docker $DOCKER_FLAGS run -v $GOPATH:/go  -w /go/src/github.com/vmware/vic -e BUILD_NUMBER=10000 golang:1.8 make bootstrap'
                        },
                )
            }
        }

        stage('Unit Test') {
            steps {
                sh 'echo Skipping...'
                // sh 'docker -H tcp://localhost:2376 run -v $GOPATH:/go  -w /go/src/github.com/vmware/vic -e BUILD_NUMBER=10000 golang:1.8 make test'
            }
        }

        // stage('Deploy') {
        //     steps {
        //         sh 'pip3 install -r examples/vic-jenkins/requirements.txt'
        //         sh 'cd examples/vic-jenkins; python3 run.py create vch'
        //     }
        // }

        stage('Integration Test') {
            steps {
                sh 'bash -x examples/vic-jenkins/vic-test/init_test.bash tests/integration-test.sh'
            }
        }
    }

    // post {
    //     always {
    //         sh "cd examples/vic-jenkins; python3 run.py delete vch"
    //     }
    // }
}